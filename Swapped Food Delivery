with even_orders as
(
select * 
from orders 
where order_id % 2 = 0
),
odd_orders as
(
select * 
from orders 
where order_id % 2 != 0
),
union_cte as
(
select e.order_id as eve_id, e.item as eve_item, o.order_id as odd_id, o.item as odd_item
from even_orders e join odd_orders o
on e.order_id - o.order_id = 1
),
required_cte as
(
(select eve_id as corrected_order_id, odd_item as item
from union_cte)
union
(select odd_id, eve_item
from union_cte)
),
odd_cte as
(
select order_id as corrected_order_id, item
from odd_orders
where order_id not in (select corrected_order_id from required_cte)
)

select * from required_cte 
union
select * from odd_cte
order by corrected_order_id

------------------------------------------------------------------------------------------------------------------------


WITH paired AS (
  SELECT 
    o1.order_id AS id1, o1.item AS item1,
    o2.order_id AS id2, o2.item AS item2
  FROM orders o1
  JOIN orders o2 ON o1.order_id = o2.order_id + 1
  WHERE o1.order_id % 2 = 0 AND o2.order_id % 2 = 1
),
swapped AS (
  SELECT id1 AS corrected_order_id, item2 AS item FROM paired
  UNION
  SELECT id2 AS corrected_order_id, item1 AS item FROM paired
),
remaining AS (
  SELECT order_id AS corrected_order_id, item
  FROM orders
  WHERE order_id NOT IN (SELECT corrected_order_id FROM swapped)
)
SELECT * FROM swapped
UNION
SELECT * FROM remaining
ORDER BY corrected_order_id;

------------------------------------------------------------------------------------------------------------------------

WITH ordered_data AS (
    SELECT 
        order_id,
        item,
        LAG(order_id) OVER (ORDER BY order_id) AS prev_id,
        LAG(item) OVER (ORDER BY order_id) AS prev_item
    FROM orders
),
swapped AS (
    SELECT order_id AS corrected_order_id, prev_item AS item
    FROM ordered_data
    WHERE order_id % 2 = 0 AND prev_id = order_id - 1

    UNION

    SELECT prev_id AS corrected_order_id, item
    FROM ordered_data
    WHERE order_id % 2 = 0 AND prev_id = order_id - 1
),
remaining AS (
    SELECT order_id AS corrected_order_id, item
    FROM orders
    WHERE order_id NOT IN (SELECT corrected_order_id FROM swapped)
)

SELECT * FROM swapped
UNION
SELECT * FROM remaining
ORDER BY corrected_order_id;

------------------------------------------------------------------------------------------------------------------------

SELECT *
FROM (
    -- Swapped orders
    SELECT e.order_id AS corrected_order_id, o.item AS item
    FROM orders e
    JOIN orders o ON e.order_id = o.order_id + 1
    WHERE e.order_id % 2 = 0

    UNION

    SELECT o.order_id AS corrected_order_id, e.item AS item
    FROM orders e
    JOIN orders o ON e.order_id = o.order_id + 1
    WHERE e.order_id % 2 = 0

    UNION

    -- Remaining unpaired orders
    SELECT order_id AS corrected_order_id, item
    FROM orders
    WHERE order_id NOT IN (
        SELECT e.order_id
        FROM orders e
        JOIN orders o ON e.order_id = o.order_id + 1
        WHERE e.order_id % 2 = 0

        UNION

        SELECT o.order_id
        FROM orders e
        JOIN orders o ON e.order_id = o.order_id + 1
        WHERE e.order_id % 2 = 0
    )
) final_result
ORDER BY corrected_order_id;


