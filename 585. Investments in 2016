import pandas as pd

def find_investments(insurance: pd.DataFrame) -> pd.DataFrame:
    df = insurance["tiv_2015"].value_counts().reset_index()
    df1 = df.merge(insurance , on = "tiv_2015")
    df2 = df1[df1["count"] > 1 ]
    df3 = insurance[["lat","lon"]].value_counts().reset_index(name = "latloncnt")
    df4 = df3.merge(insurance, on = ["lat","lon"])
    df5 = df4[df4["latloncnt"] == 1]
    df6 = df5.merge(df2,on = "pid")
    df6["tiv_2016_x"] = df6["tiv_2016_x"].sum()
    df6 = df6.rename(columns = {"tiv_2016_x":"tiv_2016"})

    return df6[["tiv_2016"]].head(1)

--------------------------------------------------------------------------------------

import pandas as pd

def find_investments(insurance: pd.DataFrame) -> pd.DataFrame:
    # Step 1: Find tiv_2015 values that occur more than once
    tiv_counts = insurance["tiv_2015"].value_counts().reset_index()
    tiv_counts.columns = ["tiv_2015", "count"]
    common_tiv = tiv_counts[tiv_counts["count"] > 1]
    
    df1 = insurance.merge(common_tiv[["tiv_2015"]], on="tiv_2015")
    
    # Step 2: Find lat, lon combinations that are unique
    latlon_counts = insurance[["lat", "lon"]].value_counts().reset_index(name="latloncnt")
    unique_latlon = latlon_counts[latlon_counts["latloncnt"] == 1]
    
    df2 = insurance.merge(unique_latlon[["lat", "lon"]], on=["lat", "lon"])
    
    # Step 3: Get intersection of the above two conditions
    final_df = df1[df1["pid"].isin(df2["pid"])]
    
    # Step 4: Sum tiv_2016 and round
    result = round(final_df["tiv_2016"].sum(), 2)
    
    return pd.DataFrame({"tiv_2016": [result]})


    
